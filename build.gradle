/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Admin' at '27.08.17 0:00' with Gradle 3.0
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.0/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'

test {
	
	useTestNG()
	
    testLogging.showStandardStreams = true
	
    // listen to events in the test execution lifecycle
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    // listen to standard out and standard error of the test JVM(s)
    onOutput { descriptor, event ->
        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
    }
    
}


// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'org.testng', name: 'testng', version: '6.10'
    compile group: 'io.github.bonigarcia', name: 'webdrivermanager', version:'1.7.1'
	compile group: 'org.seleniumhq.selenium', name: 'selenium-api', version:'3.4.0'
	compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version:'3.4.0'
	compile group: 'javax.mail', name: 'mail', version:'1.4.7'
	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.6.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.6.2'
	compile group: 'com.relevantcodes', name: 'extentreports', version:'2.41.0'
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the LOG4J2 logging API at compile time
    compile 'org.apache.logging.log4j:log4j-api:2.6.2'
    compile 'org.apache.logging.log4j:log4j-core:2.6.2'
    
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'org.testng:testng:6.10'
}
